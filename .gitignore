# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/app/node_modules
/app/.pnp
/app/.pnp.js

# testing
/app/coverage

# production
/app/build

# misc
/app/.DS_Store
/app/.env.local
/app/.env.development.local
/app/.env.test.local
/app/.env.production.local

/app/npm-debug.log*
/app/yarn-debug.log*
/app/yarn-error.log*



# Local .terraform directories
**/.terraform/*

# .tfstate files
**/*.tfstate
**/*.tfstate.*

# Crash log files
#/infra/crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
**/override.tf
**/override.tf.json
**/*_override.tf
**/*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

.idea

